{"ast":null,"code":"import { d as _inherits, e as _createSuper, _ as _createClass, a as _classCallCheck, g as _get, h as _getPrototypeOf, f as _slicedToArray, i as _set, b as _objectWithoutProperties } from '../_rollupPluginBabelHelpers-67bba7fb.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask from './factory.js';\nimport Masked from './base.js';\nimport { normalizePrepare } from '../core/utils.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\nvar _excluded = [\"compiledMasks\", \"currentMaskRef\", \"currentMask\"];\n\n/** Dynamic mask for choosing apropriate mask in run-time */\nvar MaskedDynamic = /*#__PURE__*/function (_Masked) {\n  _inherits(MaskedDynamic, _Masked);\n  var _super = _createSuper(MaskedDynamic);\n\n  /** Currently chosen mask */\n\n  /** Compliled {@link Masked} options */\n\n  /** Chooses {@link Masked} depending on input value */\n\n  /**\n    @param {Object} opts\n  */\n  function MaskedDynamic(opts) {\n    var _this;\n    _classCallCheck(this, MaskedDynamic);\n    _this = _super.call(this, Object.assign({}, MaskedDynamic.DEFAULTS, opts));\n    _this.currentMask = null;\n    return _this;\n  }\n  /**\n    @override\n  */\n\n  _createClass(MaskedDynamic, [{\n    key: \"_update\",\n    value: function _update(opts) {\n      _get(_getPrototypeOf(MaskedDynamic.prototype), \"_update\", this).call(this, opts);\n      if ('mask' in opts) {\n        // mask could be totally dynamic with only `dispatch` option\n        this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(function (m) {\n          return createMask(m);\n        }) : [];\n      }\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"_appendCharRaw\",\n    value: function _appendCharRaw(ch) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var details = this._applyDispatch(ch, flags);\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n      }\n      return details;\n    }\n  }, {\n    key: \"_applyDispatch\",\n    value: function _applyDispatch() {\n      var appended = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n      var inputValue = this.rawInputValue;\n      var insertValue = flags.tail && flags._beforeTailState != null ?\n      // $FlowFixMe - tired to fight with type system\n      flags._beforeTailState._rawInputValue : inputValue;\n      var tailValue = inputValue.slice(insertValue.length);\n      var prevMask = this.currentMask;\n      var details = new ChangeDetails();\n      var prevMaskState = prevMask === null || prevMask === void 0 ? void 0 : prevMask.state; // clone flags to prevent overwriting `_beforeTailState`\n\n      this.currentMask = this.doDispatch(appended, Object.assign({}, flags)); // restore state after dispatch\n\n      if (this.currentMask) {\n        if (this.currentMask !== prevMask) {\n          // if mask changed reapply input\n          this.currentMask.reset();\n          if (insertValue) {\n            // $FlowFixMe - it's ok, we don't change current mask above\n            var d = this.currentMask.append(insertValue, {\n              raw: true\n            });\n            details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n          }\n          if (tailValue) {\n            // $FlowFixMe - it's ok, we don't change current mask above\n            details.tailShift += this.currentMask.append(tailValue, {\n              raw: true,\n              tail: true\n            }).tailShift;\n          }\n        } else {\n          // Dispatch can do something bad with state, so\n          // restore prev mask state\n          this.currentMask.state = prevMaskState;\n        }\n      }\n      return details;\n    }\n  }, {\n    key: \"_appendPlaceholder\",\n    value: function _appendPlaceholder() {\n      var details = this._applyDispatch.apply(this, arguments);\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendPlaceholder());\n      }\n      return details;\n    }\n    /**\n     @override\n    */\n  }, {\n    key: \"_appendEager\",\n    value: function _appendEager() {\n      var details = this._applyDispatch.apply(this, arguments);\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendEager());\n      }\n      return details;\n    }\n  }, {\n    key: \"currentMaskFlags\",\n    value: function currentMaskFlags(flags) {\n      var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n      return Object.assign({}, flags, {\n        _beforeTailState: ((_flags$_beforeTailSta = flags._beforeTailState) === null || _flags$_beforeTailSta === void 0 ? void 0 : _flags$_beforeTailSta.currentMaskRef) === this.currentMask && ((_flags$_beforeTailSta2 = flags._beforeTailState) === null || _flags$_beforeTailSta2 === void 0 ? void 0 : _flags$_beforeTailSta2.currentMask) || flags._beforeTailState\n      });\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"doDispatch\",\n    value: function doDispatch(appended) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.dispatch(appended, this, flags);\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"doValidate\",\n    value: function doValidate(flags) {\n      return _get(_getPrototypeOf(MaskedDynamic.prototype), \"doValidate\", this).call(this, flags) && (!this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags)));\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"doPrepare\",\n    value: function doPrepare(str) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var _normalizePrepare = normalizePrepare(_get(_getPrototypeOf(MaskedDynamic.prototype), \"doPrepare\", this).call(this, str, flags)),\n        _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2),\n        s = _normalizePrepare2[0],\n        details = _normalizePrepare2[1];\n      if (this.currentMask) {\n        var currentDetails;\n        var _normalizePrepare3 = normalizePrepare(_get(_getPrototypeOf(MaskedDynamic.prototype), \"doPrepare\", this).call(this, s, this.currentMaskFlags(flags)));\n        var _normalizePrepare4 = _slicedToArray(_normalizePrepare3, 2);\n        s = _normalizePrepare4[0];\n        currentDetails = _normalizePrepare4[1];\n        details = details.aggregate(currentDetails);\n      }\n      return [s, details];\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this$currentMask;\n      (_this$currentMask = this.currentMask) === null || _this$currentMask === void 0 ? void 0 : _this$currentMask.reset();\n      this.compiledMasks.forEach(function (m) {\n        return m.reset();\n      });\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.value : '';\n    },\n    set: function set(value) {\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"value\", value, this, true);\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"unmaskedValue\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.unmaskedValue : '';\n    },\n    set: function set(unmaskedValue) {\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"unmaskedValue\", unmaskedValue, this, true);\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"typedValue\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.typedValue : '';\n    } // probably typedValue should not be used with dynamic\n    ,\n\n    set: function set(value) {\n      var unmaskedValue = String(value); // double check it\n\n      if (this.currentMask) {\n        this.currentMask.typedValue = value;\n        unmaskedValue = this.currentMask.unmaskedValue;\n      }\n      this.unmaskedValue = unmaskedValue;\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"isComplete\",\n    get: function get() {\n      var _this$currentMask2;\n      return Boolean((_this$currentMask2 = this.currentMask) === null || _this$currentMask2 === void 0 ? void 0 : _this$currentMask2.isComplete);\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"isFilled\",\n    get: function get() {\n      var _this$currentMask3;\n      return Boolean((_this$currentMask3 = this.currentMask) === null || _this$currentMask3 === void 0 ? void 0 : _this$currentMask3.isFilled);\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var details = new ChangeDetails();\n      if (this.currentMask) {\n        var _this$currentMask4;\n        details.aggregate((_this$currentMask4 = this.currentMask).remove.apply(_this$currentMask4, arguments)) // update with dispatch\n        .aggregate(this._applyDispatch());\n      }\n      return details;\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"state\",\n    get: function get() {\n      var _this$currentMask5;\n      return Object.assign({}, _get(_getPrototypeOf(MaskedDynamic.prototype), \"state\", this), {\n        _rawInputValue: this.rawInputValue,\n        compiledMasks: this.compiledMasks.map(function (m) {\n          return m.state;\n        }),\n        currentMaskRef: this.currentMask,\n        currentMask: (_this$currentMask5 = this.currentMask) === null || _this$currentMask5 === void 0 ? void 0 : _this$currentMask5.state\n      });\n    },\n    set: function set(state) {\n      var compiledMasks = state.compiledMasks,\n        currentMaskRef = state.currentMaskRef,\n        currentMask = state.currentMask,\n        maskedState = _objectWithoutProperties(state, _excluded);\n      this.compiledMasks.forEach(function (m, mi) {\n        return m.state = compiledMasks[mi];\n      });\n      if (currentMaskRef != null) {\n        this.currentMask = currentMaskRef;\n        this.currentMask.state = currentMask;\n      }\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"state\", maskedState, this, true);\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"extractInput\",\n    value: function extractInput() {\n      var _this$currentMask6;\n      return this.currentMask ? (_this$currentMask6 = this.currentMask).extractInput.apply(_this$currentMask6, arguments) : '';\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"extractTail\",\n    value: function extractTail() {\n      var _this$currentMask7, _get2;\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return this.currentMask ? (_this$currentMask7 = this.currentMask).extractTail.apply(_this$currentMask7, args) : (_get2 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"extractTail\", this)).call.apply(_get2, [this].concat(args));\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"doCommit\",\n    value: function doCommit() {\n      if (this.currentMask) this.currentMask.doCommit();\n      _get(_getPrototypeOf(MaskedDynamic.prototype), \"doCommit\", this).call(this);\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"nearestInputPos\",\n    value: function nearestInputPos() {\n      var _this$currentMask8, _get3;\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      return this.currentMask ? (_this$currentMask8 = this.currentMask).nearestInputPos.apply(_this$currentMask8, args) : (_get3 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"nearestInputPos\", this)).call.apply(_get3, [this].concat(args));\n    }\n  }, {\n    key: \"overwrite\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.overwrite : _get(_getPrototypeOf(MaskedDynamic.prototype), \"overwrite\", this);\n    },\n    set: function set(overwrite) {\n      console.warn('\"overwrite\" option is not available in dynamic mask, use this option in siblings');\n    }\n  }, {\n    key: \"eager\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.eager : _get(_getPrototypeOf(MaskedDynamic.prototype), \"eager\", this);\n    },\n    set: function set(eager) {\n      console.warn('\"eager\" option is not available in dynamic mask, use this option in siblings');\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"maskEquals\",\n    value: function maskEquals(mask) {\n      return Array.isArray(mask) && this.compiledMasks.every(function (m, mi) {\n        var _mask$mi;\n        return m.maskEquals((_mask$mi = mask[mi]) === null || _mask$mi === void 0 ? void 0 : _mask$mi.mask);\n      });\n    }\n    /**\n      @override\n    */\n  }, {\n    key: \"typedValueEquals\",\n    value: function typedValueEquals(value) {\n      var _this$currentMask9;\n      return Boolean((_this$currentMask9 = this.currentMask) === null || _this$currentMask9 === void 0 ? void 0 : _this$currentMask9.typedValueEquals(value));\n    }\n  }]);\n  return MaskedDynamic;\n}(Masked);\nMaskedDynamic.DEFAULTS = {\n  dispatch: function dispatch(appended, masked, flags) {\n    if (!masked.compiledMasks.length) return;\n    var inputValue = masked.rawInputValue; // simulate input\n\n    var inputs = masked.compiledMasks.map(function (m, index) {\n      m.reset();\n      m.append(inputValue, {\n        raw: true\n      });\n      m.append(appended, masked.currentMaskFlags(flags));\n      var weight = m.rawInputValue.length;\n      return {\n        weight: weight,\n        index: index\n      };\n    }); // pop masks with longer values first\n\n    inputs.sort(function (i1, i2) {\n      return i2.weight - i1.weight;\n    });\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\nIMask.MaskedDynamic = MaskedDynamic;\nexport { MaskedDynamic as default };","map":{"version":3,"names":["d","_inherits","e","_createSuper","_","_createClass","a","_classCallCheck","g","_get","h","_getPrototypeOf","f","_slicedToArray","i","_set","b","_objectWithoutProperties","ChangeDetails","createMask","Masked","normalizePrepare","IMask","_excluded","MaskedDynamic","_Masked","_super","opts","_this","call","Object","assign","DEFAULTS","currentMask","key","value","_update","prototype","compiledMasks","Array","isArray","mask","map","m","_appendCharRaw","ch","flags","arguments","length","undefined","details","_applyDispatch","aggregate","_appendChar","currentMaskFlags","appended","prevValueBeforeTail","tail","_beforeTailState","_value","inputValue","rawInputValue","insertValue","_rawInputValue","tailValue","slice","prevMask","prevMaskState","state","doDispatch","reset","append","raw","tailShift","inserted","_appendPlaceholder","apply","_appendEager","_flags$_beforeTailSta","_flags$_beforeTailSta2","currentMaskRef","dispatch","doValidate","doPrepare","str","_normalizePrepare","_normalizePrepare2","s","currentDetails","_normalizePrepare3","_normalizePrepare4","_this$currentMask","forEach","get","set","unmaskedValue","typedValue","String","_this$currentMask2","Boolean","isComplete","_this$currentMask3","isFilled","remove","_this$currentMask4","_this$currentMask5","maskedState","mi","extractInput","_this$currentMask6","extractTail","_this$currentMask7","_get2","_len","args","_key","concat","doCommit","nearestInputPos","_this$currentMask8","_get3","_len2","_key2","overwrite","console","warn","eager","maskEquals","every","_mask$mi","typedValueEquals","_this$currentMask9","masked","inputs","index","weight","sort","i1","i2","default"],"sources":["C:/Users/yan rodrigues/Documents/GitHub/Information-Management/client/node_modules/imask/esm/masked/dynamic.js"],"sourcesContent":["import { d as _inherits, e as _createSuper, _ as _createClass, a as _classCallCheck, g as _get, h as _getPrototypeOf, f as _slicedToArray, i as _set, b as _objectWithoutProperties } from '../_rollupPluginBabelHelpers-67bba7fb.js';\nimport ChangeDetails from '../core/change-details.js';\nimport createMask from './factory.js';\nimport Masked from './base.js';\nimport { normalizePrepare } from '../core/utils.js';\nimport IMask from '../core/holder.js';\nimport '../core/continuous-tail-details.js';\n\nvar _excluded = [\"compiledMasks\", \"currentMaskRef\", \"currentMask\"];\n\n/** Dynamic mask for choosing apropriate mask in run-time */\nvar MaskedDynamic = /*#__PURE__*/function (_Masked) {\n  _inherits(MaskedDynamic, _Masked);\n\n  var _super = _createSuper(MaskedDynamic);\n\n  /** Currently chosen mask */\n\n  /** Compliled {@link Masked} options */\n\n  /** Chooses {@link Masked} depending on input value */\n\n  /**\n    @param {Object} opts\n  */\n  function MaskedDynamic(opts) {\n    var _this;\n\n    _classCallCheck(this, MaskedDynamic);\n\n    _this = _super.call(this, Object.assign({}, MaskedDynamic.DEFAULTS, opts));\n    _this.currentMask = null;\n    return _this;\n  }\n  /**\n    @override\n  */\n\n\n  _createClass(MaskedDynamic, [{\n    key: \"_update\",\n    value: function _update(opts) {\n      _get(_getPrototypeOf(MaskedDynamic.prototype), \"_update\", this).call(this, opts);\n\n      if ('mask' in opts) {\n        // mask could be totally dynamic with only `dispatch` option\n        this.compiledMasks = Array.isArray(opts.mask) ? opts.mask.map(function (m) {\n          return createMask(m);\n        }) : [];\n      }\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"_appendCharRaw\",\n    value: function _appendCharRaw(ch) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var details = this._applyDispatch(ch, flags);\n\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendChar(ch, this.currentMaskFlags(flags)));\n      }\n\n      return details;\n    }\n  }, {\n    key: \"_applyDispatch\",\n    value: function _applyDispatch() {\n      var appended = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var prevValueBeforeTail = flags.tail && flags._beforeTailState != null ? flags._beforeTailState._value : this.value;\n      var inputValue = this.rawInputValue;\n      var insertValue = flags.tail && flags._beforeTailState != null ? // $FlowFixMe - tired to fight with type system\n      flags._beforeTailState._rawInputValue : inputValue;\n      var tailValue = inputValue.slice(insertValue.length);\n      var prevMask = this.currentMask;\n      var details = new ChangeDetails();\n      var prevMaskState = prevMask === null || prevMask === void 0 ? void 0 : prevMask.state; // clone flags to prevent overwriting `_beforeTailState`\n\n      this.currentMask = this.doDispatch(appended, Object.assign({}, flags)); // restore state after dispatch\n\n      if (this.currentMask) {\n        if (this.currentMask !== prevMask) {\n          // if mask changed reapply input\n          this.currentMask.reset();\n\n          if (insertValue) {\n            // $FlowFixMe - it's ok, we don't change current mask above\n            var d = this.currentMask.append(insertValue, {\n              raw: true\n            });\n            details.tailShift = d.inserted.length - prevValueBeforeTail.length;\n          }\n\n          if (tailValue) {\n            // $FlowFixMe - it's ok, we don't change current mask above\n            details.tailShift += this.currentMask.append(tailValue, {\n              raw: true,\n              tail: true\n            }).tailShift;\n          }\n        } else {\n          // Dispatch can do something bad with state, so\n          // restore prev mask state\n          this.currentMask.state = prevMaskState;\n        }\n      }\n\n      return details;\n    }\n  }, {\n    key: \"_appendPlaceholder\",\n    value: function _appendPlaceholder() {\n      var details = this._applyDispatch.apply(this, arguments);\n\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendPlaceholder());\n      }\n\n      return details;\n    }\n    /**\n     @override\n    */\n\n  }, {\n    key: \"_appendEager\",\n    value: function _appendEager() {\n      var details = this._applyDispatch.apply(this, arguments);\n\n      if (this.currentMask) {\n        details.aggregate(this.currentMask._appendEager());\n      }\n\n      return details;\n    }\n  }, {\n    key: \"currentMaskFlags\",\n    value: function currentMaskFlags(flags) {\n      var _flags$_beforeTailSta, _flags$_beforeTailSta2;\n\n      return Object.assign({}, flags, {\n        _beforeTailState: ((_flags$_beforeTailSta = flags._beforeTailState) === null || _flags$_beforeTailSta === void 0 ? void 0 : _flags$_beforeTailSta.currentMaskRef) === this.currentMask && ((_flags$_beforeTailSta2 = flags._beforeTailState) === null || _flags$_beforeTailSta2 === void 0 ? void 0 : _flags$_beforeTailSta2.currentMask) || flags._beforeTailState\n      });\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"doDispatch\",\n    value: function doDispatch(appended) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      return this.dispatch(appended, this, flags);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"doValidate\",\n    value: function doValidate(flags) {\n      return _get(_getPrototypeOf(MaskedDynamic.prototype), \"doValidate\", this).call(this, flags) && (!this.currentMask || this.currentMask.doValidate(this.currentMaskFlags(flags)));\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"doPrepare\",\n    value: function doPrepare(str) {\n      var flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var _normalizePrepare = normalizePrepare(_get(_getPrototypeOf(MaskedDynamic.prototype), \"doPrepare\", this).call(this, str, flags)),\n          _normalizePrepare2 = _slicedToArray(_normalizePrepare, 2),\n          s = _normalizePrepare2[0],\n          details = _normalizePrepare2[1];\n\n      if (this.currentMask) {\n        var currentDetails;\n\n        var _normalizePrepare3 = normalizePrepare(_get(_getPrototypeOf(MaskedDynamic.prototype), \"doPrepare\", this).call(this, s, this.currentMaskFlags(flags)));\n\n        var _normalizePrepare4 = _slicedToArray(_normalizePrepare3, 2);\n\n        s = _normalizePrepare4[0];\n        currentDetails = _normalizePrepare4[1];\n        details = details.aggregate(currentDetails);\n      }\n\n      return [s, details];\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      var _this$currentMask;\n\n      (_this$currentMask = this.currentMask) === null || _this$currentMask === void 0 ? void 0 : _this$currentMask.reset();\n      this.compiledMasks.forEach(function (m) {\n        return m.reset();\n      });\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.value : '';\n    },\n    set: function set(value) {\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"value\", value, this, true);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"unmaskedValue\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.unmaskedValue : '';\n    },\n    set: function set(unmaskedValue) {\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"unmaskedValue\", unmaskedValue, this, true);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"typedValue\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.typedValue : '';\n    } // probably typedValue should not be used with dynamic\n    ,\n    set: function set(value) {\n      var unmaskedValue = String(value); // double check it\n\n      if (this.currentMask) {\n        this.currentMask.typedValue = value;\n        unmaskedValue = this.currentMask.unmaskedValue;\n      }\n\n      this.unmaskedValue = unmaskedValue;\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"isComplete\",\n    get: function get() {\n      var _this$currentMask2;\n\n      return Boolean((_this$currentMask2 = this.currentMask) === null || _this$currentMask2 === void 0 ? void 0 : _this$currentMask2.isComplete);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"isFilled\",\n    get: function get() {\n      var _this$currentMask3;\n\n      return Boolean((_this$currentMask3 = this.currentMask) === null || _this$currentMask3 === void 0 ? void 0 : _this$currentMask3.isFilled);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var details = new ChangeDetails();\n\n      if (this.currentMask) {\n        var _this$currentMask4;\n\n        details.aggregate((_this$currentMask4 = this.currentMask).remove.apply(_this$currentMask4, arguments)) // update with dispatch\n        .aggregate(this._applyDispatch());\n      }\n\n      return details;\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"state\",\n    get: function get() {\n      var _this$currentMask5;\n\n      return Object.assign({}, _get(_getPrototypeOf(MaskedDynamic.prototype), \"state\", this), {\n        _rawInputValue: this.rawInputValue,\n        compiledMasks: this.compiledMasks.map(function (m) {\n          return m.state;\n        }),\n        currentMaskRef: this.currentMask,\n        currentMask: (_this$currentMask5 = this.currentMask) === null || _this$currentMask5 === void 0 ? void 0 : _this$currentMask5.state\n      });\n    },\n    set: function set(state) {\n      var compiledMasks = state.compiledMasks,\n          currentMaskRef = state.currentMaskRef,\n          currentMask = state.currentMask,\n          maskedState = _objectWithoutProperties(state, _excluded);\n\n      this.compiledMasks.forEach(function (m, mi) {\n        return m.state = compiledMasks[mi];\n      });\n\n      if (currentMaskRef != null) {\n        this.currentMask = currentMaskRef;\n        this.currentMask.state = currentMask;\n      }\n\n      _set(_getPrototypeOf(MaskedDynamic.prototype), \"state\", maskedState, this, true);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"extractInput\",\n    value: function extractInput() {\n      var _this$currentMask6;\n\n      return this.currentMask ? (_this$currentMask6 = this.currentMask).extractInput.apply(_this$currentMask6, arguments) : '';\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"extractTail\",\n    value: function extractTail() {\n      var _this$currentMask7, _get2;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return this.currentMask ? (_this$currentMask7 = this.currentMask).extractTail.apply(_this$currentMask7, args) : (_get2 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"extractTail\", this)).call.apply(_get2, [this].concat(args));\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"doCommit\",\n    value: function doCommit() {\n      if (this.currentMask) this.currentMask.doCommit();\n\n      _get(_getPrototypeOf(MaskedDynamic.prototype), \"doCommit\", this).call(this);\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"nearestInputPos\",\n    value: function nearestInputPos() {\n      var _this$currentMask8, _get3;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return this.currentMask ? (_this$currentMask8 = this.currentMask).nearestInputPos.apply(_this$currentMask8, args) : (_get3 = _get(_getPrototypeOf(MaskedDynamic.prototype), \"nearestInputPos\", this)).call.apply(_get3, [this].concat(args));\n    }\n  }, {\n    key: \"overwrite\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.overwrite : _get(_getPrototypeOf(MaskedDynamic.prototype), \"overwrite\", this);\n    },\n    set: function set(overwrite) {\n      console.warn('\"overwrite\" option is not available in dynamic mask, use this option in siblings');\n    }\n  }, {\n    key: \"eager\",\n    get: function get() {\n      return this.currentMask ? this.currentMask.eager : _get(_getPrototypeOf(MaskedDynamic.prototype), \"eager\", this);\n    },\n    set: function set(eager) {\n      console.warn('\"eager\" option is not available in dynamic mask, use this option in siblings');\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"maskEquals\",\n    value: function maskEquals(mask) {\n      return Array.isArray(mask) && this.compiledMasks.every(function (m, mi) {\n        var _mask$mi;\n\n        return m.maskEquals((_mask$mi = mask[mi]) === null || _mask$mi === void 0 ? void 0 : _mask$mi.mask);\n      });\n    }\n    /**\n      @override\n    */\n\n  }, {\n    key: \"typedValueEquals\",\n    value: function typedValueEquals(value) {\n      var _this$currentMask9;\n\n      return Boolean((_this$currentMask9 = this.currentMask) === null || _this$currentMask9 === void 0 ? void 0 : _this$currentMask9.typedValueEquals(value));\n    }\n  }]);\n\n  return MaskedDynamic;\n}(Masked);\nMaskedDynamic.DEFAULTS = {\n  dispatch: function dispatch(appended, masked, flags) {\n    if (!masked.compiledMasks.length) return;\n    var inputValue = masked.rawInputValue; // simulate input\n\n    var inputs = masked.compiledMasks.map(function (m, index) {\n      m.reset();\n      m.append(inputValue, {\n        raw: true\n      });\n      m.append(appended, masked.currentMaskFlags(flags));\n      var weight = m.rawInputValue.length;\n      return {\n        weight: weight,\n        index: index\n      };\n    }); // pop masks with longer values first\n\n    inputs.sort(function (i1, i2) {\n      return i2.weight - i1.weight;\n    });\n    return masked.compiledMasks[inputs[0].index];\n  }\n};\nIMask.MaskedDynamic = MaskedDynamic;\n\nexport { MaskedDynamic as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}