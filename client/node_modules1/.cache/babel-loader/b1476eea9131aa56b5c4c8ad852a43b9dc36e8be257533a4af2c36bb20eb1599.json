{"ast":null,"code":"import { isString } from '../core/utils.js';\nimport IMask from '../core/holder.js';\nimport '../_rollupPluginBabelHelpers-67bba7fb.js';\nimport '../core/change-details.js';\n\n/** Get Masked class by mask type */\n\nfunction maskedClass(mask) {\n  if (mask == null) {\n    throw new Error('mask property should be defined');\n  } // $FlowFixMe\n\n  if (mask instanceof RegExp) return IMask.MaskedRegExp; // $FlowFixMe\n\n  if (isString(mask)) return IMask.MaskedPattern; // $FlowFixMe\n\n  if (mask instanceof Date || mask === Date) return IMask.MaskedDate; // $FlowFixMe\n\n  if (mask instanceof Number || typeof mask === 'number' || mask === Number) return IMask.MaskedNumber; // $FlowFixMe\n\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic; // $FlowFixMe\n\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask; // $FlowFixMe\n\n  if (mask instanceof IMask.Masked) return mask.constructor; // $FlowFixMe\n\n  if (mask instanceof Function) return IMask.MaskedFunction;\n  console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\n  // $FlowFixMe\n\n  return IMask.Masked;\n}\n/** Creates new {@link Masked} depending on mask type */\n\nfunction createMask(opts) {\n  // $FlowFixMe\n  if (IMask.Masked && opts instanceof IMask.Masked) return opts;\n  opts = Object.assign({}, opts);\n  var mask = opts.mask; // $FlowFixMe\n\n  if (IMask.Masked && mask instanceof IMask.Masked) return mask;\n  var MaskedClass = maskedClass(mask);\n  if (!MaskedClass) throw new Error('Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.');\n  return new MaskedClass(opts);\n}\nIMask.createMask = createMask;\nexport { createMask as default, maskedClass };","map":{"version":3,"names":["isString","IMask","maskedClass","mask","Error","RegExp","MaskedRegExp","MaskedPattern","Date","MaskedDate","Number","MaskedNumber","Array","isArray","MaskedDynamic","Masked","prototype","constructor","Function","MaskedFunction","console","warn","createMask","opts","Object","assign","MaskedClass","default"],"sources":["C:/Users/yan rodrigues/Documents/GitHub/Information-Management/client/node_modules/imask/esm/masked/factory.js"],"sourcesContent":["import { isString } from '../core/utils.js';\nimport IMask from '../core/holder.js';\nimport '../_rollupPluginBabelHelpers-67bba7fb.js';\nimport '../core/change-details.js';\n\n/** Get Masked class by mask type */\n\nfunction maskedClass(mask) {\n  if (mask == null) {\n    throw new Error('mask property should be defined');\n  } // $FlowFixMe\n\n\n  if (mask instanceof RegExp) return IMask.MaskedRegExp; // $FlowFixMe\n\n  if (isString(mask)) return IMask.MaskedPattern; // $FlowFixMe\n\n  if (mask instanceof Date || mask === Date) return IMask.MaskedDate; // $FlowFixMe\n\n  if (mask instanceof Number || typeof mask === 'number' || mask === Number) return IMask.MaskedNumber; // $FlowFixMe\n\n  if (Array.isArray(mask) || mask === Array) return IMask.MaskedDynamic; // $FlowFixMe\n\n  if (IMask.Masked && mask.prototype instanceof IMask.Masked) return mask; // $FlowFixMe\n\n  if (mask instanceof IMask.Masked) return mask.constructor; // $FlowFixMe\n\n  if (mask instanceof Function) return IMask.MaskedFunction;\n  console.warn('Mask not found for mask', mask); // eslint-disable-line no-console\n  // $FlowFixMe\n\n  return IMask.Masked;\n}\n/** Creates new {@link Masked} depending on mask type */\n\nfunction createMask(opts) {\n  // $FlowFixMe\n  if (IMask.Masked && opts instanceof IMask.Masked) return opts;\n  opts = Object.assign({}, opts);\n  var mask = opts.mask; // $FlowFixMe\n\n  if (IMask.Masked && mask instanceof IMask.Masked) return mask;\n  var MaskedClass = maskedClass(mask);\n  if (!MaskedClass) throw new Error('Masked class is not found for provided mask, appropriate module needs to be import manually before creating mask.');\n  return new MaskedClass(opts);\n}\nIMask.createMask = createMask;\n\nexport { createMask as default, maskedClass };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAO,0CAA0C;AACjD,OAAO,2BAA2B;;AAElC;;AAEA,SAASC,WAAWA,CAACC,IAAI,EAAE;EACzB,IAAIA,IAAI,IAAI,IAAI,EAAE;IAChB,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;EACpD,CAAC,CAAC;;EAGF,IAAID,IAAI,YAAYE,MAAM,EAAE,OAAOJ,KAAK,CAACK,YAAY,CAAC,CAAC;;EAEvD,IAAIN,QAAQ,CAACG,IAAI,CAAC,EAAE,OAAOF,KAAK,CAACM,aAAa,CAAC,CAAC;;EAEhD,IAAIJ,IAAI,YAAYK,IAAI,IAAIL,IAAI,KAAKK,IAAI,EAAE,OAAOP,KAAK,CAACQ,UAAU,CAAC,CAAC;;EAEpE,IAAIN,IAAI,YAAYO,MAAM,IAAI,OAAOP,IAAI,KAAK,QAAQ,IAAIA,IAAI,KAAKO,MAAM,EAAE,OAAOT,KAAK,CAACU,YAAY,CAAC,CAAC;;EAEtG,IAAIC,KAAK,CAACC,OAAO,CAACV,IAAI,CAAC,IAAIA,IAAI,KAAKS,KAAK,EAAE,OAAOX,KAAK,CAACa,aAAa,CAAC,CAAC;;EAEvE,IAAIb,KAAK,CAACc,MAAM,IAAIZ,IAAI,CAACa,SAAS,YAAYf,KAAK,CAACc,MAAM,EAAE,OAAOZ,IAAI,CAAC,CAAC;;EAEzE,IAAIA,IAAI,YAAYF,KAAK,CAACc,MAAM,EAAE,OAAOZ,IAAI,CAACc,WAAW,CAAC,CAAC;;EAE3D,IAAId,IAAI,YAAYe,QAAQ,EAAE,OAAOjB,KAAK,CAACkB,cAAc;EACzDC,OAAO,CAACC,IAAI,CAAC,yBAAyB,EAAElB,IAAI,CAAC,CAAC,CAAC;EAC/C;;EAEA,OAAOF,KAAK,CAACc,MAAM;AACrB;AACA;;AAEA,SAASO,UAAUA,CAACC,IAAI,EAAE;EACxB;EACA,IAAItB,KAAK,CAACc,MAAM,IAAIQ,IAAI,YAAYtB,KAAK,CAACc,MAAM,EAAE,OAAOQ,IAAI;EAC7DA,IAAI,GAAGC,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEF,IAAI,CAAC;EAC9B,IAAIpB,IAAI,GAAGoB,IAAI,CAACpB,IAAI,CAAC,CAAC;;EAEtB,IAAIF,KAAK,CAACc,MAAM,IAAIZ,IAAI,YAAYF,KAAK,CAACc,MAAM,EAAE,OAAOZ,IAAI;EAC7D,IAAIuB,WAAW,GAAGxB,WAAW,CAACC,IAAI,CAAC;EACnC,IAAI,CAACuB,WAAW,EAAE,MAAM,IAAItB,KAAK,CAAC,mHAAmH,CAAC;EACtJ,OAAO,IAAIsB,WAAW,CAACH,IAAI,CAAC;AAC9B;AACAtB,KAAK,CAACqB,UAAU,GAAGA,UAAU;AAE7B,SAASA,UAAU,IAAIK,OAAO,EAAEzB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}