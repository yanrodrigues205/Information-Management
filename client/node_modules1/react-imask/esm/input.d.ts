import React from 'react';
import IMask from 'imask';
import { IMaskInputProps, ReactElement } from './mixin';
declare const IMaskInput: React.ForwardRefExoticComponent<(Pick<{
    mask: DateConstructor;
} & Partial<Pick<IMask.Masked<DateConstructor>, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager">> & Partial<Pick<IMask.MaskedPattern<DateConstructor>, "blocks" | "definitions" | "placeholderChar" | "lazy">> & Partial<Pick<IMask.MaskedDate, "parse" | "format" | "pattern" | "min" | "max" | "autofix">> & import("./mixin").ReactMaskProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement> & {
    ref?: React.Ref<React.ComponentType<IMaskInputProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement, unknown>>>;
}, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager" | "blocks" | "definitions" | "placeholderChar" | "lazy" | "parse" | "format" | "pattern" | "min" | "max" | "autofix" | "mask" | "value" | "onAccept" | "onComplete" | "unmask" | "inputRef"> | Pick<{
    mask: NumberConstructor;
} & Partial<Pick<IMask.Masked<NumberConstructor>, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager">> & Partial<Pick<IMask.MaskedNumber, "min" | "max" | "radix" | "thousandsSeparator" | "mapToRadix" | "scale" | "signed" | "normalizeZeros" | "padFractionalZeros">> & import("./mixin").ReactMaskProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement> & {
    ref?: React.Ref<React.ComponentType<IMaskInputProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement, unknown>>>;
}, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager" | "min" | "max" | "radix" | "thousandsSeparator" | "mapToRadix" | "scale" | "signed" | "normalizeZeros" | "padFractionalZeros" | "mask" | "value" | "onAccept" | "onComplete" | "unmask" | "inputRef"> | Pick<{
    mask: string;
} & Partial<Pick<IMask.Masked<string>, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager">> & Partial<Pick<IMask.MaskedPattern<string>, "blocks" | "definitions" | "placeholderChar" | "lazy">> & import("./mixin").ReactMaskProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement> & {
    ref?: React.Ref<React.ComponentType<IMaskInputProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement, unknown>>>;
}, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager" | "blocks" | "definitions" | "placeholderChar" | "lazy" | "mask" | "value" | "onAccept" | "onComplete" | "unmask" | "inputRef"> | Pick<{
    mask: string;
} & Partial<Pick<IMask.Masked<string>, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager">> & Partial<Pick<IMask.MaskedPattern<string>, "blocks" | "definitions" | "placeholderChar" | "lazy">> & Partial<Pick<IMask.MaskedRange, "autofix" | "maxLength" | "from" | "to">> & import("./mixin").ReactMaskProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement> & {
    ref?: React.Ref<React.ComponentType<IMaskInputProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement, unknown>>>;
}, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager" | "blocks" | "definitions" | "placeholderChar" | "lazy" | "autofix" | "maxLength" | "from" | "to" | "mask" | "value" | "onAccept" | "onComplete" | "unmask" | "inputRef"> | Pick<{
    mask: IMask.AnyMaskedOptionsArray;
} & Partial<Pick<IMask.Masked<IMask.AnyMaskedOptionsArray>, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager">> & import("./mixin").ReactMaskProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement> & {
    ref?: React.Ref<React.ComponentType<IMaskInputProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement, unknown>>>;
}, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager" | "mask" | "value" | "onAccept" | "onComplete" | "unmask" | "inputRef"> | Pick<{
    mask: IMask.AnyMaskedOptionsArray;
} & Partial<Pick<IMask.Masked<IMask.AnyMaskedOptionsArray>, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager">> & Partial<Pick<IMask.MaskedDynamic, "dispatch">> & import("./mixin").ReactMaskProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement> & {
    ref?: React.Ref<React.ComponentType<IMaskInputProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement, unknown>>>;
}, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager" | "dispatch" | "mask" | "value" | "onAccept" | "onComplete" | "unmask" | "inputRef"> | Pick<{
    mask: RegExp;
} & Partial<Pick<IMask.Masked<RegExp>, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager">> & import("./mixin").ReactMaskProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement> & {
    ref?: React.Ref<React.ComponentType<IMaskInputProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement, unknown>>>;
}, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager" | "mask" | "value" | "onAccept" | "onComplete" | "unmask" | "inputRef"> | Pick<{
    mask: Function;
} & Partial<Pick<IMask.Masked<Function>, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager">> & import("./mixin").ReactMaskProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement> & {
    ref?: React.Ref<React.ComponentType<IMaskInputProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement, unknown>>>;
}, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager" | "mask" | "value" | "onAccept" | "onComplete" | "unmask" | "inputRef"> | Pick<{
    mask: IMask.AnyMaskedOptionsMasked;
} & Partial<Pick<IMask.Masked<IMask.AnyMaskedOptionsMasked>, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager">> & import("./mixin").ReactMaskProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement> & {
    ref?: React.Ref<React.ComponentType<IMaskInputProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement, unknown>>>;
}, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager" | "mask" | "value" | "onAccept" | "onComplete" | "unmask" | "inputRef"> | Pick<{
    mask: IMask.MaskedFunction;
} & Partial<Pick<IMask.Masked<IMask.MaskedFunction>, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager">> & import("./mixin").ReactMaskProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement> & {
    ref?: React.Ref<React.ComponentType<IMaskInputProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement, unknown>>>;
}, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager" | "mask" | "value" | "onAccept" | "onComplete" | "unmask" | "inputRef"> | Pick<{
    mask: IMask.MaskedRegExp;
} & Partial<Pick<IMask.Masked<IMask.MaskedRegExp>, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager">> & import("./mixin").ReactMaskProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement> & {
    ref?: React.Ref<React.ComponentType<IMaskInputProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement, unknown>>>;
}, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager" | "mask" | "value" | "onAccept" | "onComplete" | "unmask" | "inputRef"> | Pick<{
    mask: IMask.MaskedEnum;
} & Partial<Pick<IMask.Masked<IMask.MaskedEnum>, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager">> & import("./mixin").ReactMaskProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement> & {
    ref?: React.Ref<React.ComponentType<IMaskInputProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement, unknown>>>;
}, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager" | "mask" | "value" | "onAccept" | "onComplete" | "unmask" | "inputRef"> | Pick<{
    mask: IMask.MaskedRange;
} & Partial<Pick<IMask.Masked<IMask.MaskedRange>, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager">> & import("./mixin").ReactMaskProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement> & {
    ref?: React.Ref<React.ComponentType<IMaskInputProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement, unknown>>>;
}, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager" | "mask" | "value" | "onAccept" | "onComplete" | "unmask" | "inputRef"> | Pick<{
    mask: typeof IMask.Masked;
} & Partial<Pick<IMask.Masked<typeof IMask.Masked>, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager">> & import("./mixin").ReactMaskProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement> & {
    ref?: React.Ref<React.ComponentType<IMaskInputProps<IMask.AnyMaskedOptions, boolean | "typed", unknown, ReactElement, unknown>>>;
}, "parent" | "prepare" | "validate" | "commit" | "overwrite" | "eager" | "mask" | "value" | "onAccept" | "onComplete" | "unmask" | "inputRef">) & React.RefAttributes<unknown>>;
export default IMaskInput;
